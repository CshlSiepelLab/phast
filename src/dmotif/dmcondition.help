char* HELP = "\nPROGRAM: dmcondition\n\
\n\
USAGE: dmcondition [OPTIONS] <MSA file> <mod file> <motif file> > out.dat\n\
\n\
NOTE: One or both of the --cond-on-subs or cond-on-species options are\n\
      required! See below for details...\n\
\n\
DESCRIPTION: \n\
\n\
Produce a plain-text file describing states and positions in the emissions\n\
matrix that need to be zeroed out in order to condition on site presence in\n\
a given species and/or presence of substitutions in order to make a gain or\n\
loss call. This can be supplied to dmsample within the alignments.lst file.\n\
See dmsample -h for details.\n\
\n\
EXAMPLES:\n\
\n\
OPTIONS:\n\
	\n\
    --msa-format, -i FASTA|PHYLIP|MPM|MAF|SS\n\
        Alignment format (default FASTA).  Note that the program\n\
        msa_view can be used for conversion.\n\
\n\
    --refseq, -M <fname>\n\
        (for use with --msa-format MAF) Read the complete text of the\n\
        reference sequence from <fname> (FASTA format) and combine it\n\
        with the contents of the MAF file to produce a complete,\n\
        ordered representation of the alignment.  The reference\n\
        sequence of the MAF file is assumed to be the one that appears\n\
        first in each block.	\n\
\n\
    --cond-on-species, -x <species name in alignment>\n\
	Condition gain and loss calls in the hmm on presence of a site in a\n\
	given species. This is useful if ChIP-based regions are used as inputs\n\
	for motif finding. The effect is to prohibit motif loss predictions on\n\
	branches leading to a species believed to contain a binding site based\n\
	on ChIP (or other) evidence and prohibit gain predictions on branches\n\
	leading away from that species.\n\
\n\
    --cond-on-subs, -X\n\
	Condition gain and loss predictions on presence of at least one\n\
	substitution within a window believed to represent a binding site. This\n\
	prevents gain/loss predictions on branches that contain no observable\n\
	substitutions in the multiple alignment. The underlying algorithm uses\n\
	Fitch parsimony to partition the tree into branches that do and do not\n\
	contain substitutions for each motif window in the dataset and zeroes\n\
	out the chain of gain and loss states in the emissions matrix \n\
	corresponding to combinations of branch and motif position that do not\n\
	contain any substitutions to support such a prediction.\n\
\n\
	If used in conjunction with --cond-on-species, states that are already\n\
	zeroed out because they are incompatible with site presence in a\n\
	given species will be skipped in this step.\n\
\n\
    --nosubs, -n\n\
	Toggle between modes for deciding whether to zero a branch given the\n\
	character sets at parent and child node. The default mode is to zero\n\
	branches if parent and child nodes have identical sets of characters,\n\
	regardless of size. This option toggles the alternate mode, where\n\
	branches are zeroed only if there are no scenarios that allow any\n\
	possibility of substitution along a branch. That is, parent and child\n\
	both have the same base sequence with only a single possibility at both\n\
	nodes.\n\
	\n\
    --as-bed, -b <bedfile>\n\
	Output the locations of individual zeroed states in a bed format.\n\
	This expects the filename of the sequence file to be in the format\n\
	\"chrom.genomic-start.genomic-end.format\" -- other formats will cause\n\
	unpredictable behavior (read: segfaults).\n\
\n\
    --refidx, -r <refseq_idx>\n\
        Use coordinate frame of specified sequence in output.  Default\n\
        value is 1, first sequence in alignment; 0 indicates\n\
        coordinate frame of entire multiple alignment.\n\
\n\
    --help, -h\n\
        Show this help message and exit.\n\
";
