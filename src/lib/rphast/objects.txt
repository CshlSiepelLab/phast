class msa
---------
msa$nseqs
msa$names <- character(msa$nseqs)
msa$len
msa$alphabet
msa$externalPtr (pointer to msa object in C)


msa(nseqs=0, len=0, names=NULL, seqs=NULL, alphabet=NULL)
read.msa(file, format=FASTA, alphabet=NULL)
write.msa(file, msa, format=FASTA, pretty.print=FALSE)
print.msa(msa, printSeq=FALSE)
summary.msa(msa)
msa.strip.gaps(msa, mode="any")
msa.sub.alignment(msa, seqList, include=TRUE, startCol=1, endCol=msa$seqlen)


# not sure if we want this.  Instead, just use <- operator.  But,
# whenver data in externalPtr changes, need to copy everything and
# assign new externalPtr.  Then trust R to do the garbage collection
# and get rid of old stuff (and call msa.free) which are no longer used??
msa.copy(msaSrc) #note: this is something that doesn't feel R-like:
                 # we'd rather just say msa2 <- msa1, but this wouldn't
		 # copy things stored on the C-side. 
		 

msa.free(msa)  # use reg.finalize on each newly created msa object so 
               # this is called automatically upon garbage collection
